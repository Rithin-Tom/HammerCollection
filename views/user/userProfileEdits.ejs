
  <!-- Bootstrap 5 CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.22.0/dist/sweetalert2.min.css" rel="stylesheet">
  <style>  .form-section {
  background-color: white;
  border-radius: 1rem;
  padding: 2rem;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  max-width: 800px; /* make this bigger or use 100% */
  width: 100%;       /* ensure full width inside column */
  margin: auto;
   border: 50px solid rgb(27 57 84);
}
.error-message{
      color: rgb(241, 15, 15);
      font-size: 0.75rem;
      display: none;

    }
</style>

<body style="
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  background-image: url('https://i.pinimg.com/736x/fa/4a/fa/fa4afaac480367b0867308624a84fda9.jpg');
  background-size: cover;
  background-position: center;
  min-height: 100vh;
">

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../partials/user/sideBar', { user: user }) %>

    <!-- Main Content -->
     <div class="col-12 col-md-9 d-flex justify-content-center align-items-center py-5" style="min-height: 100vh;">
    <div class="form-section">
      <h4 class="mb-4 text-center">Edit Profile</h4>

      <form  id="editProfile">
        <div class="mb-3">
          <label for="fullName" class="form-label">Full Name</label>
          <input type="text" id="fullName" class="form-control" value="<%=user.name %>">
          <div id="error1" class="error-message" ></div>
        </div>

        <div class="mb-3">
  <label for="emailAddress" class="form-label">Email</label>
  <div class="input-group">
    <input 
      type="text" 
      id="emailAddress" 
      name="email" 
      class="form-control" 
      placeholder="" 
      value="<%= user.email %>"
      disabled
    >
    <button 
      type="button" 
      class="btn btn-outline-secondary btn-sm" 
      onclick="requestEmailEdit(this)"
    >
      Edit
    </button>
  </div>
  <div id="error2" class="error-message"></div>
</div>
<!--  -->

        <input type="hidden" id="oldEmailAddress" class="form-control" value="<%= user.email %>">

        <div class="mb-3">
          <label for="phoneNumber" class="form-label">Phone Number</label>
          <input type="text" id="phoneNumber"  placeholder="<%= user.phone ? user.phone : 'Not added phone number yet!!' %>" class="form-control" value="">
          <div id="error3" class="error-message" ></div>
        </div>

        <!-- Toggle Button -->
<div class="d-flex justify-content-between align-items-center mt-4">
  <h5 class="mb-0"><%= user.password ? "Change Password" : "Add Password" %></h5>
  <button type="button" class="btn btn-sm btn-outline-primary" onclick="togglePasswordSettings()">Password Settings</button>
</div>

<!-- Password Section (Hidden Initially) -->
<div id="passwordSettingsSection" style="display: none;">

  <% if (user.password) { %>
    <div class="mb-3">
      <label for="currentPassword" class="form-label">Current Password</label>
      <input type="password" id="currentPassword" class="form-control">
      <div id="error4" class="error-message"></div>
    </div>
  <% } %>

  <div class="mb-3">
    <label for="newPassword" class="form-label">New Password</label>
    <input type="password" id="newPassword" class="form-control">
    <div id="error5" class="error-message"></div>
  </div>

  <div class="mb-3">
    <label for="confirmPassword" class="form-label">Confirm New Password</label>
    <input type="password" id="confirmPassword" class="form-control">
    <div id="error6" class="error-message"></div>
  </div>
</div>


        <div class="d-flex justify-content-between mt-4">
          <a href="/profile" class="btn btn-outline-secondary">Cancel</a>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
      </div>
    </div>
  </div>
  </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

  function togglePasswordSettings() {
  const section = document.getElementById('passwordSettingsSection');
  section.style.display = section.style.display === 'none' ? 'block' : 'none';
}

async function requestEmailEdit(button) {
  try {
    const response = await fetch('/profile/email/edit-request', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ email: '<%= user.email %>' }) // send user ID if needed
    });
    const email = '<%= user.email %>'

    const data = await response.json();

    
      
  
    if(data.success) {

      window.location.href=data.redirectUrl
     
      //
      // emailInput.disabled = false;
      // emailInput.focus();

      // button.textContent = "Cancel";
      // button.classList.remove("btn-outline-secondary");
      // button.classList.add("btn-outline-danger");
      // button.onclick = () => {
      //   emailInput.disabled = true;
      //   emailInput.value = document.getElementById('oldEmailAddress').value;
      //   button.textContent = "Edit";
      //   button.classList.remove("btn-outline-danger");
      //   button.classList.add("btn-outline-secondary");
      //   button.onclick = () => requestEmailEdit(button);
      // };
    } else {
      document.getElementById('error2').textContent = data.message || 'Unable to edit email right now.';
    }
  } catch (error) {
    console.error("Error:", error);
    document.getElementById('error2').textContent = 'Something went wrong while enabling email edit.';
  }
}

window.addEventListener('DOMContentLoaded',()=>{
  const urlParams = new URLSearchParams(window.location.search);
  const emailInParams = urlParams.get('email');
   const emailInput = document.getElementById('emailAddress');

   if(emailInParams && emailInput && emailInput.value===emailInParams){
    emailInput.removeAttribute('readonly');
    emailInput.disabled = false;
      emailInput.focus();

   }

})
  


document.getElementById('editProfile').addEventListener('submit', updateProfile);
  
  async function updateProfile(event) {

    const User = <%- JSON.stringify(user) %>;



  
    
    
    
    event.preventDefault(); 

    const fullName = document.getElementById('fullName').value.trim();
    const error1 = document.getElementById("error1");
    const emailAddress = document.getElementById('emailAddress').value.trim();
    const error2 = document.getElementById("error2");
    const phoneNumber = document.getElementById('phoneNumber')?.value.trim();
    const error3 = document.getElementById("error3");
    const currentPassword = document.getElementById('currentPassword')?.value.trim() || '';
    const error4 = document.getElementById("error4");
    const newPassword = document.getElementById('newPassword')?.value.trim();
    const error5 = document.getElementById("error5");
    const confirmPassword = document.getElementById('confirmPassword')?.value.trim();
    const error6 = document.getElementById("error6");

    


    const confirmResult = await Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to update your profile?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, update it!',
    cancelButtonText: 'Cancel',
    reverseButtons: true
  });




    

    const namePattern = /^[A-Za-z\s]+$/;

    let isValid = true

    if (fullName === ""  ) {
      error1.style.display = "block";
      error1.innerHTML = "Please enter a valid name";
      isValid=false
      
     
    } else if (!namePattern.test(fullName)) {
      error1.style.display = "block";
      error1.innerHTML = "Name can only contain alphabets and spaces";
       isValid=false
   
    } else {
      error1.style.display = "none";
    }
      
    if(phoneNumber){

       if(phoneNumber.length!== 10 || isNaN(phoneNumber)){
                error3.style.display="block";
                error3.innerHTML="Please enter 10 digit number";
                 isValid=false
              

            }else{
                error3.style.display='none'
                
            
            }

    }else{
      error3.style.display='none'
    }
        
          const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i;
            if(emailAddress ==="" || !emailPattern.test(emailAddress)){
                error2.style.display="block";
                error2.innerHTML="Please enter a vaild email address";
                 isValid=false
           
            }else{
                error2.style.display="none"
            }


            const passPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$%^&+=!]).{8,}$/;

           
        if(currentPassword){
            if(User.password){
              
               if(! passPattern.test(currentPassword)){
                error4.style.display="block";
                error4.innerHTML="Please enter a vaild Password ";
                 isValid=false
              
            }
          else{
                error4.style.display="none"
            }

            }}
            

            if(newPassword){

         

           if(! passPattern.test(newPassword)){
                error5.style.display="block";
                error5.innerHTML="Please enter a vaild Password ";
                 isValid=false    
            }else{
                error5.style.display="none"
            }
            if(!passPattern.test(confirmPassword)){
                error6.style.display="block";
                error6.innerHTML="Please enter a vaild Password ";
                 isValid=false
               
            }else{
                error6.style.display="none"
            }

            if(newPassword !==confirmPassword){
              error6.style.display = "block";
              error6.innerHTML = "Passwords do not match";
              isValid = false;

            }else {
              error6.style.display ="none"
            }

               }

         if (!isValid) return;

 if (confirmResult.isConfirmed) {
         try {
          const res = await fetch('/profile/',{
            method:'PUT',
            headers:{
              'Content-Type': 'application/json'
            },
            body:JSON.stringify({
              fullName,
              phoneNumber,
              emailAddress,
              currentPassword:currentPassword ||null,
              newPassword

            })
          });

          const result = await res.json();

          if(result.success){
            Swal.fire({
        icon: "success",
        title: "Profile updated successfully!",
        text: result.message || "updated"
      });
             
              window.location.reload();

          }else {
       Swal.fire({
        icon: "error",
        title: "Profile Edit Error",
        text: result.message || "Editing failed"
      });
    }
          
         } catch (error) {
          console.error(err);
           Swal.fire({
        icon: "error",
        title: "Profile Edit Error",
        text: 'Something went wrong!'
      });
         
         }

        
   
  }else {
    
    Swal.fire({
      icon: 'info',
      title: 'Cancelled',
      text: 'Profile update was cancelled.',
      timer: 1500,
      showConfirmButton: false
    });
  }

}
</script>
</body>

