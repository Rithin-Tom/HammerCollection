<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Grid - Bootstrap</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .background-image {
            background-color: rgba(41, 102, 196, 0.8);
            background-size: 400% 400%;
            animation: gradientShift 10s ease infinite;
            min-height: 100vh;
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        }
        
        .star-rating {
            color: #ffd700;
        }
        
        .price-original {
            text-decoration: line-through;
            color: #888;
        }
        
        .price-discounted {
            color: #22c55e;
            font-weight: bold;
        }
        
        .wishlist-btn {
            transition: all 0.3s ease;
            background: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .wishlist-btn:hover {
            transform: scale(1.1);
        }
        
        .wishlist-active {
            color: #ef4444;
        }
        
        .filter-checkbox:checked + label {
            background-color: #3b82f6 !important;
            color: white !important;
        }
        
        .filter-label {
            cursor: pointer;
            padding: 4px 12px;
            border-radius: 50px;
            border: 2px solid #3b82f6;
            font-size: 0.875rem;
            transition: all 0.2s;
            display: inline-block;
            margin-bottom: 8px;
        }
        
        .sidebar-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            position: sticky;
            top: 20px;
        }
        
        .product-image {
            aspect-ratio: 3/4;
            background-color: #f8f9fa;
            overflow: hidden;
        }
        
        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }
        
        .product-image:hover img {
            transform: scale(1.05);
        }
        
        .discount-badge {
            position: absolute;
            top: 8px;
            left: 8px;
            background: #dc3545;
            color: white;
            padding: 4px 8px;
            border-radius: 50px;
            font-size: 0.75rem;
            font-weight: bold;
        }
        
        .wishlist-heart {
            position: absolute;
            top: 8px;
            right: 8px;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            z-index: 1050;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        }
        
        .notification.show {
            transform: translateX(0);
        }

        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 2rem;
            gap: 1rem;
        }

        .pagination-info {
            background: rgba(255, 255, 255, 0.9);
            padding: 8px 16px;
            border-radius: 50px;
            font-size: 0.875rem;
            color: #666;
        }

        .pagination .page-link {
            border: none;
            background: rgba(255, 255, 255, 0.9);
            color: #333;
            margin: 0 2px;
            border-radius: 8px;
            padding: 8px 12px;
            transition: all 0.3s ease;
        }
        .buyNow {
            background-color: #3b82f6 ;
            color: white;

        }

        .pagination .page-link:hover {
            background: #3b82f6;
            color: white;
            transform: translateY(-2px);
        }

        .pagination .page-item.active .page-link {
            background: #3b82f6;
            color: white;
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        }

        .pagination .page-item.disabled .page-link {
            opacity: 0.5;
            cursor: not-allowed;
        }





        /*  */



      
 .category-card {
    border: 2px solid #2966c4;
    border-radius: 10px;
    margin-bottom: 1rem;
    background: #fff;
    overflow: hidden;
  }

  .main-category {
    background-color: #f0f7ff;
    padding: 10px 16px;
    cursor: pointer;
    font-weight: 600;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #c3dafb;
  }

  .tag {
    display: inline-block;
    padding: 6px 14px;
    border: 2px solid #2966c4;
    border-radius: 9999px;
    background-color: white;
    color: #2966c4;
    font-weight: 500;
    cursor: pointer;
    margin: 5px 5px 0 0;
    transition: all 0.2s ease;
  }

  .tag:hover {
    background-color: #e2efff;
  }

  .tag.selected {
    background-color: #2966c4;
    color: white;
  }

  .subcategory-list {
    padding: 10px 16px 15px 16px;
    display: none;
  }

  .category-card.active .subcategory-list {
    display: block;
  }

  .chevron {
    font-size: 1rem;
    color: #2966c4;
    transition: transform 0.2s;
  }

  .category-card.active .chevron {
    transform: rotate(90deg);
  }

    </style>
</head>

<body class="background-image">
    <div class="container-fluid py-4">
        <div class="row g-4">
            <!-- Sidebar -->
            <div class="col-lg-3">
                <div class="card sidebar-card">
                    <div class="card-body">
                        <h3 class="h4 fw-bold mb-4 text-dark">Filter Items</h3>
                        
                        <!-- Category Filter -->
                        <div id="categoryFilters">
                          <% categories.forEach(main => { %>
                            <div class="category-card">
                              <!-- Main category as clickable tag -->
                              <div class="main-category" onclick="toggleCategory(this)">
                                <span 
                                  class="tag main-tag" 
                                  data-id="<%= main._id %>" 
                                  onclick="event.stopPropagation(); toggleTag(this)">
                                  <%= main.name %>
                                </span>
                                <!-- <span class="chevron">▶</span> -->
                                 <span class="toggle-icon">⋮</span> <!-- vertical ellipsis -->
                           
                              </div>
                          
                              <!-- Subcategory list -->
                              <div class="subcategory-list">
                                <% main.children.forEach(sub => { %>
                                  <span 
                                    class="tag sub-tag" 
                                    data-id="<%= sub._id %>" 
                                    onclick="toggleTag(this)">
                                    <%= sub.name %>
                                  </span>
                                <% }) %>
                              </div>
                            </div>
                          <% }) %>
                        </div>

                        
                        <!-- Price Range -->
                        <div class="mb-4">
                            <h4 class="h5 fw-semibold mb-3 text-secondary">Price Range</h4>
                            <div class="row g-2">
                                <div class="col-12">
                                    <label class="form-label small text-muted">Min Price</label>
                                    <input type="number" id="minPrice" placeholder="₹ 300" class="form-control">
                                </div>
                                <div class="col-12">
                                    <label class="form-label small text-muted">Max Price</label>
                                    <input type="number" id="maxPrice" placeholder="₹ 10000" class="form-control">
                                </div>
                            </div>
                        </div>
                        
                        <!-- Customer Rating -->
                        <div class="mb-4">
                            <h4 class="h5 fw-semibold mb-3 text-secondary">Customer Rating</h4>
                            <div class="d-flex flex-column gap-2">
                                <div>
                                    <input type="checkbox" id="rating5" class="filter-checkbox d-none">
                                    <label for="rating5" class="filter-label d-flex align-items-center">
                                        <span class="star-rating me-1">★★★★★</span> & above
                                    </label>
                                </div>
                                <div>
                                    <input type="checkbox" id="rating4" class="filter-checkbox d-none">
                                    <label for="rating4" class="filter-label d-flex align-items-center">
                                        <span class="star-rating me-1">★★★★</span> & above
                                    </label>
                                </div>
                                <div>
                                    <input type="checkbox" id="rating3" class="filter-checkbox d-none">
                                    <label for="rating3" class="filter-label d-flex align-items-center">
                                        <span class="star-rating me-1">★★★</span> & above
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <button onclick="applyFilters()" class="btn btn-primary w-100">
                            Apply Filters
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Product Grid -->
            <div class="col-lg-9">
                <!-- <div id="productGrid" class="row g-4"> -->
                    <!-- Products will be dynamically loaded here -->
                    <div id="productGrid" class="row g-4">
 
</div>

<!-- 
                </div> -->
                
                <!-- Pagination -->
                <div class="pagination-container">
                    <div class="pagination-info">
                        <span id="paginationInfo">Showing 1-8 of 24 items</span>
                    </div>
                    <nav aria-label="Product pagination">
                        <ul class="pagination mb-0" id="pagination">
                            <!-- Pagination will be dynamically generated -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
 function toggleCategory(header) {
    const card = header.closest('.category-card');
    card.classList.toggle('active');
  }

  function toggleTag(tag) {
    tag.classList.toggle('selected');
    const selectedId = tag.dataset.id;

    
    if (tag.classList.contains('selected')) {
      selectedFilters.add(selectedId);
    } else {
      selectedFilters.delete(selectedId);
    }

    console.log([...selectedFilters]); 
  }

  const selectedFilters = new Set();



  function renderProducts(products) {
  const productGrid = document.getElementById('productGrid');
  productGrid.innerHTML = ''; 

  if (products.length === 0) {
    productGrid.innerHTML = '<p class="text-center">No products found.</p>';
    return;
  }

  products.forEach(product => {
    const discount = Math.round(((product.regularPrice - product.salePrice) / product.regularPrice) * 100);
    const stars = '★'.repeat(product.rating) + '☆'.repeat(5 - product.rating);

    const html = `
      <div class="col-md-6 col-lg-3">
        
        <div class="card h-100 card-hover">
          <div class="position-relative">
            <div class="product-image">
              <a href="/product/${product._id}" class="text-decoration-none text-dark">
              <img src="${product.productImage[0]}" alt="${product.productName}" class="img-fluid">
                </a>
            </div>
            <button onclick="toggleWishlist('${product._id}')" class="wishlist-btn wishlist-heart">
              <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path>
              </svg>
            </button>
            ${discount > 0 ? `<div class="discount-badge">${discount}% OFF</div>` : ''}
          </div>
          <div class="card-body">
            <h5 class="card-title">${product.productName}</h5>
            <div class="d-flex align-items-center mb-2">
              <span class="star-rating small me-2">${stars}</span>
              <span class="text-muted small">(${product.rating}.0)</span>
            </div>
            <div class="d-flex align-items-center mb-3">
              <span class="price-discounted h5 me-2">₹${product.salePrice.toLocaleString()}</span>
              ${product.regularPrice > product.salePrice
                ? `<span class="price-original small">₹${product.regularPrice.toLocaleString()}</span>`
                : ''}
            </div>
            <div class="d-flex gap-2">
              <button onclick="buyNow('${product._id}')" class="buyNow btn flex-fill">Buy Now</button>
              <button onclick="addToCart('${product._id}',${product.salePrice})" class="btn btn-dark flex-fill">Add to Cart</button>
            </div>
          </div>
        </div>
       
      </div>
    `;

    productGrid.insertAdjacentHTML('beforeend', html);
  });





}

function updatePagination(total, current, totalPages) {
  const pagination = document.getElementById('pagination');
  const info = document.getElementById('paginationInfo');

  const start = (current - 1) * 8 + 1;
  const end = Math.min(current * 8, total);

  info.textContent = `Showing ${start}–${end} of ${total} items`;

  pagination.innerHTML = '';

  
  const prevLi = document.createElement('li');
  prevLi.classList.add('page-item');
  if (current === 1) prevLi.classList.add('disabled');
  prevLi.innerHTML = `<a class="page-link" href="#">Prev</a>`;
  prevLi.addEventListener('click', (e) => {
    e.preventDefault();
    if (current > 1) applyFilters(current - 1);
  });
  pagination.appendChild(prevLi);

  // Page numbers
  for (let i = 1; i <= totalPages; i++) {
    const li = document.createElement('li');
    li.classList.add('page-item');
    if (i === current) li.classList.add('active');

    li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
    li.addEventListener('click', (e) => {
      e.preventDefault();
      applyFilters(i);
    });

    pagination.appendChild(li);
  }

  const nextLi = document.createElement('li');
  nextLi.classList.add('page-item');
  if (current === totalPages) nextLi.classList.add('disabled');
  nextLi.innerHTML = `<a class="page-link" href="#">Next</a>`;
  nextLi.addEventListener('click', (e) => {
    e.preventDefault();
    if (current < totalPages) applyFilters(current + 1);
  });
  pagination.appendChild(nextLi);
}







let currentPage = 1; 

function applyFilters(page = 1) {
      currentPage = page;
  const selectedCategoryIds = [...selectedFilters];
  const minPrice = document.getElementById("minPrice").value || null;
  const maxPrice = document.getElementById("maxPrice").value || null;

 const filters = {
    
    page: currentPage,
    limit: 8 
  };

if (selectedCategoryIds.length > 0) {
  filters.categoryIds = selectedCategoryIds;
}


  if (minPrice !== null && minPrice !== "") {
    filters.minPrice = Number(minPrice);
  }

  if (maxPrice !== null && maxPrice !== "") {
    filters.maxPrice = Number(maxPrice);
  }

    
  if (document.getElementById('rating5').checked) filters.rating  = 5;
  else if (document.getElementById('rating4').checked) filters.rating = 4;
  else if (document.getElementById('rating3').checked) filters.rating = 3;
 

  fetch('/filter-products', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(filters)
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        renderProducts(data.products);
        updatePagination(data.totalProducts, data.currentPage, data.totalPages);

      }
    });
}


async function addToCart(id,price) {

  try {
     
    const res = await fetch('/cart/add',{
      method:"POST",
      headers:{'content-type':'application/json'},
      body:JSON.stringify({
        id,
        price

      })
    })

    const data = await res.json();

    if (data.success) {
     Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'success',
        title: 'Added to cart!',
        showConfirmButton: false,
        timer: 1500,
        timerProgressBar: true
      });

    } else {
      Swal.fire({
       toast: true,
       position: 'top-end',
       icon: 'error',
       title: data.message ||'Failed to add to cart:',
       showConfirmButton: false,
       timer: 1500,
       timerProgressBar: true
      });

    }
  } catch (error) {
    console.log('ff',error)
    
  }


  
}




window.onload = () => {
  applyFilters(1); // triggers product load and pagination
};




    </script>
</body>
</html>